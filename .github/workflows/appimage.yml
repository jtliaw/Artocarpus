# GitHub Actions Workflow: Build Linux AppImage for Artocarpus Scrcpy GUI
# This workflow builds a AppImage file with the correct application icon embedded.
# It is triggered on push to the main branch or can be run manually.

name: Build Linux AppImage with Icon

on:
  # Triggers the workflow on push events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Checkout Repository ---
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Step 2: Set up Python ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # --- Step 3: Install Dependencies ---
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse libfuse2 python3-pip
          pip install ttkthemes

      # --- Step 4: Prepare AppDir (Icon Fix) ---
      # This simplified step ensures the icon and desktop file are correctly placed and named.
      - name: Prepare AppDir
        run: |
          # Create the main binary directory
          mkdir -p AppDir/usr/bin

          # Copy application binaries and scripts
          cp adb scrcpy scrcpy_gui.py scrcpy-server AppDir/usr/bin/

          # Make the binaries executable
          chmod +x AppDir/usr/bin/adb AppDir/usr/bin/scrcpy AppDir/usr/bin/scrcpy-server

          # --- ICON AND DESKTOP FILE SETUP (CRITICAL PART) ---
          # 1. Define the base name for the app. This MUST be consistent.
          APP_NAME="Artocarpus_scrcpy_gui"

          # 2. Copy the icon to the AppDir root and rename it to match APP_NAME.png
          # This is the location appimagetool will look for the icon file.
          cp icon.png "AppDir/${APP_NAME}.png"

          # 3. Create the AppRun launch script
          cat <<'EOF' > AppDir/AppRun
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          # Use the system's python3 to run the script from within the AppDir
          exec python3 "$HERE/usr/bin/scrcpy_gui.py" "$@"
          EOF
          chmod +x AppDir/AppRun

          # 4. Create the .desktop file in the AppDir root.
          cat <<EOF > "AppDir/${APP_NAME}.desktop"
          [Desktop Entry]
          Name=Artocarpus Scrcpy GUI
          Comment=A GUI for the scrcpy Android screen mirroring tool
          Exec=AppRun
          # The Icon key MUST match the base name of the icon file (without .png)
          Icon=${APP_NAME}
          Type=Application
          Categories=Utility;
          EOF
          # --- END OF CRITICAL PART ---

          # Debugging step: List the final contents of the AppDir root to verify.
          echo "--- Verifying AppDir Root Contents ---"
          ls -l AppDir/

      # --- Step 5: Download AppImageTool ---
      - name: Download AppImageTool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      # --- Step 6: Build the AppImage ---
      - name: Build AppImage
        run: |
          VERSION="v5.2" # Incremented version to distinguish the build
          BUILD_TIME="$(date +'%Y%m%d-%H%M')"
          ARCH="x86_64"
          FILE_NAME="Artocarpus_scrcpy_gui-${VERSION}-${BUILD_TIME}-${ARCH}.AppImage"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          
          # Run the build process
          ./appimagetool AppDir "$FILE_NAME"

      # --- Step 7: Upload to GitHub Release ---
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Artocarpus_scrcpy_gui ${{ env.VERSION }} (Build ${{ env.BUILD_TIME }})
          tag_name: ${{ env.VERSION }}-${{ env.BUILD_TIME }}
          files: ${{ env.FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
