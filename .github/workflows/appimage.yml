# GitHub Actions Workflow: Build Linux AppImage for Artocarpus Scrcpy GUI
# This "bulletproof" workflow builds an AppImage without bundling scrcpy, adb, or scrcpy-server
# Users will need to provide their own scrcpy and adb installations

name: Build Linux AppImage without Bundled Binaries

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # --- Step 1: Checkout Repository ---
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Step 2: Set up Python ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # --- Step 3: Install Dependencies ---
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse libfuse2 python3-pip
          pip install ttkthemes

      # --- Step 4: Prepare AppDir (No Bundled Binaries) ---
      - name: Prepare AppDir
        run: |
          # 1. Define the base name for the app. This is used consistently everywhere.
          APP_NAME="Artocarpus_scrcpy_gui"

          # 2. Create the full Filesystem Hierarchy Standard (FHS) structure
          mkdir -p AppDir/usr/bin
          mkdir -p AppDir/usr/share/applications
          mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps

          # 3. Copy only the Python script and icon (no scrcpy, adb, or scrcpy-server)
          cp scrcpy_gui.py AppDir/usr/bin/
          cp artocarpus_icon.png AppDir/usr/bin/

          # 4. Create the AppRun launch script
          cat <<'EOF' > AppDir/AppRun
          #!/bin/bash
          HERE="$(dirname "$(readlink -f "${0}")")"
          exec python3 "$HERE/usr/bin/scrcpy_gui.py" "$@"
          EOF
          chmod +x AppDir/AppRun

          # --- ICON AND DESKTOP FILE SETUP (CRITICAL PART) ---
          # 5. Create the .desktop file
          cat <<EOF > "AppDir/${APP_NAME}.desktop"
          [Desktop Entry]
          Name=Artocarpus Scrcpy GUI
          Comment=A GUI for the scrcpy Android screen mirroring tool (requires separate scrcpy and adb installation)
          Exec=AppRun
          Icon=${APP_NAME}
          Type=Application
          Categories=Utility;
          EOF
          
          # 6. Place the icon and .desktop file correctly
          # A. Copy icon to the standard FHS path.
          cp artocarpus_icon.png "AppDir/usr/share/icons/hicolor/256x256/apps/${APP_NAME}.png"
          # B. CRITICAL: Also copy the icon to the AppDir root. appimagetool uses this as the source for the embedded icon.
          cp artocarpus_icon.png "AppDir/${APP_NAME}.png"
          # C. CRITICAL: Also copy the .desktop file to its standard FHS path.
          cp "AppDir/${APP_NAME}.desktop" AppDir/usr/share/applications/
          # --- END OF CRITICAL PART ---

          # Debugging step: List the final contents of the AppDir to verify everything is in place.
          echo "--- Verifying AppDir Contents ---"
          ls -lR AppDir/

      # --- Step 5: Download AppImageTool ---
      - name: Download AppImageTool
        run: |
          wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool

      # --- Step 6: Build the AppImage ---
      - name: Build AppImage
        run: |
          VERSION="v5.2" # Incremented version for the new build
          BUILD_TIME="$(date +'%Y%m%d-%H%M')"
          ARCH="x86_64"
          FILE_NAME="Artocarpus_scrcpy_gui-${VERSION}-${BUILD_TIME}-${ARCH}.AppImage"

          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "BUILD_TIME=$BUILD_TIME" >> $GITHUB_ENV
          echo "FILE_NAME=$FILE_NAME" >> $GITHUB_ENV
          
          ./appimagetool AppDir "$FILE_NAME"

      # --- Step 7: Upload to GitHub Release ---
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Artocarpus_scrcpy_gui ${{ env.VERSION }} (Build ${{ env.BUILD_TIME }})
          tag_name: ${{ env.VERSION }}-${{ env.BUILD_TIME }}
          files: ${{ env.FILE_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
